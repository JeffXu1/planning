//----------------------------------------------------------------------------
// ???????Spline.h
//----------------------------------------------------------------------------
// ????:	?????????????????§Ó??
//----------------------------------------------------------------------------
// ?????	1.?????????????????Ú…?????
//				1)????????????
//				2)????????????
//			2.?????????????????
//				1)?????????????????,?????????????
//				2)????????????????????????????????
//				3)?Ú…????????????(?????2),?????Max(x)??Min(x)?????????????.
//				x?????????????????,?????????????????
//----------------------------------------------------------------------------
// ????? ?????
// ????????: 2017??2??20??
// ????????
//-----------------------------------------------------------------------------

#ifndef _SPLINE_H
#define _SPLINE_H
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#pragma warning(disable : 4290) //vs2010??c++??????????????????????§Þ???????????????

//??????????????????,???????????????????????????§Ñ???
namespace SplineSpace
{
	class SplineFailure //????
	{
	private:
		const char *Message;

	public:
		SplineFailure(const char *msg);
		const char *GetMessage();
	};

	class SplineInterface //?????
	{
	public:
		//??????:
		//x->?????????(????)
		//y->?????????(???)
		//???x?????????????????
		virtual bool SinglePointInterp(const double &x, double &y) = 0;
		//?????:
		//x->??????????????????,num->???????????????(????)
		//y->????????????????(???????).0
		virtual bool MultiPointInterp(const double *x, const int &num, double *y) = 0;
		//??????:
		//num->????????????????????(????)
		//x->??????????????????(???????)
		//y->???????????????(???????)
		virtual bool AutoInterp(const int &num, double *x, double *y) = 0;

		virtual ~SplineInterface(){};
	};

	enum BoundaryCondition //??????????
	{
		GivenFirstOrder = 1 //??????????
		,
		GivenSecondOrder //???????????
	};

	class Spline : public SplineInterface //?????
	{
	public:
		//??????:
		//x0->???????????????????,y0->???????????????????,num->???????????
		//bc->???????,?????????????
		//leftBoundary,rightBoundary?????½„?????????,??????0
		Spline(const double *x0, const double *y0, const int &num,
			   BoundaryCondition bc = GivenSecondOrder, const double &leftBoundary = 0, const double &rightBoundary = 0);

		bool SinglePointInterp(const double &x, double &y) throw(SplineFailure); //?üD?????
		bool MultiPointInterp(const double *x, const int &num, double *y) throw(SplineFailure);
		bool AutoInterp(const int &num, double *x, double *y) throw(SplineFailure);

		~Spline();

	private:
		//????
		void PartialDerivative1(void); //??????
		void PartialDerivative2(void); //??????
		//????
		const double *GivenX;		//?????????????
		const double *GivenY;		//?????????????
		const int GivenNum;			//????????????????
		const BoundaryCondition Bc; //???????
		const double LeftB;
		const double RightB;

		double *PartialDerivative; //??????????????????????
		double MaxX;			   //???????????
		double MinX;			   //?????????§³?

		const double *SplineX; //????????
		double *SplineY;	   //????????
		const int *SplineNum;  //???????
	};
}
#endif
